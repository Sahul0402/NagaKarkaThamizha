18.12.2022
Create table FavouriteUser(FUID int primary key identity(1,1),UserID int references Users(UserID),
FavouriteUser varchar(60),CreatedDate DATETIME	Default GETDATE() NULL)

Insert into FavouriteUser(UserID,FavouriteUser)values(178,'177,176,175,174,173,172,171,170,169,168,167,166')
Insert into FavouriteUser(UserID,FavouriteUser)values(2,'61,62,83,64,65,69,70,72,73,74')

Go

Create table FavouriteCategory(FCID int primary key identity(1,1),UserID int references Users(UserID),
FavouriteCategory varchar(30),CreatedDate DATETIME	Default GETDATE() NULL)

Insert into FavouriteCategory(UserID,FavouriteCategory)values(2,'1,2,3,4,5,6,7,8,9,10')
Insert into FavouriteCategory(UserID,FavouriteCategory)values(178,'11,12,13,14,15,16,17,18,19,20')

Go
****************************************************************************************************
CREATE TABLE [dbo].[Pages](
	[PageID]		[TINYINT] PRIMARY KEY IDENTITY(1,1) NOT NULL,
	[Name]			[VARCHAR](25) NULL,
	[ProjectID]		[TINYINT] REFERENCES dbo.Projects(PROJECTID),
	[EnteredBy]		[INT] REFERENCES dbo.Users(USERID),
	[CreatedDate]	[DATE] DEFAULT GETDATE(),
	[RecStatus]		[CHAR](1) DEFAULT 'A'
)

insert into Pages(Name,ProjectID)values('BooksReview',1)

GO

Create table dbo.Comments(
CommentsID			Int identity(1,1)primary key,
MasterCommentsID	Int NULL,
ProjectID			TINYINT references [Projects]([ProjectID]),
UserId				int references dbo.Users(UserId),
MasterPageID		tinyint references dbo.Pages(PageID),
ChildPageID			int,
Comments			nvarchar(2050)NOT NULL,
CreatedDate			datetime,
RecStatus			Char(1) default 'A')

Go

-- SP: USP_AddComments
CREATE Procedure dbo.USP_AddComments( 
	@ProjectID TINYINT, @UserID INT, 
	@Name nvarchar(100), @Email varchar(35), 
	@Password Nvarchar(60), @Mobile varchar(15), 
	@MasterPageID TINYINT, @ChildPageID INT,
	@Comments nvarchar(2050), 
	@Result VARCHAR(7) Output) AS 
BEGIN
   Set NoCount on 
      BEGIN TRY 
		 IF(@UserID > 0) 
				BEGIN
					Insert into dbo.Comments(ProjectID, UserID, MasterPageID, ChildPageID, Comments, CreatedDate)
					Values (@ProjectID, @UserID, @MasterPageID, @ChildPageID, @Comments, GETDATE())
						SET @Result='Success'
						return @Result 
				END
         ELSE
             BEGIN
					Insert into dbo.Users(Name,UserName, MailID, Password, Mobile,ProfessionID,UserTypeID)
					values (@Name, '', @Email, @Password, @Mobile,1, 6) --UserTypeID=6 (User) 
						SELECT @Result = scope_identity();
                  
					Insert into dbo.Comments(ProjectID, UserID, MasterPageID, ChildPageID, Comments, CreatedDate)
					Values (@ProjectID, @Result, @MasterPageID, @ChildPageID, @Comments, GETDATE())

						SET @Result='Success'
						return @Result 
               END
      END TRY 
      BEGIN CATCH 
			EXEC dbo.USP_GetErrorInfo 
      END CATCH 
END
-- SP: USP_AddComments

GO

CREATE Procedure dbo.USP_GetAllComments
AS
BEGIN
Set NoCount on
	Select CommentsID,MasterCommentsID, ProjectID, C.UserID, MasterPageID, ChildPageID, Comments, C.CreatedDate,
			U.UserName
			FROM dbo.Comments C
			JOIN dbo.Users U on C.UserID = U.UserID
END

GO

CREATE Procedure dbo.USP_GetAllCommentsByPageID
(
	@MasterPageID TINYINT, 
	@ChildPageID INT
)
AS
BEGIN
Set NoCount on
	Select CommentsID, MasterCommentsID, ProjectID, C.UserID, MasterPageID, ChildPageID, Comments, C.CreatedDate,
			U.UserName
			FROM dbo.Comments C
			JOIN dbo.Users U on C.UserID = U.UserID
			WHERE MasterPageID = @MasterPageID AND ChildPageID = @ChildPageID 
END

GO

ALTER procedure [dbo].[USP_GetBooksReviewByReviewID]  --1  
(@booksReviewID int)                                      
AS                                      
BEGIN                                      
  SET NOCOUNT ON                                
            
  SELECT             
  BR.BooksReviewID,            
  BD.BookDetailsID,            
  B.BookID,            
  B.Name AS BookName,            
  BR.Header,            
  BR.Description,            
  BR.UserID,            
  U.UserName,        
  A.AuthorID,      
  W.UserName as AuthorName,       
  Cast(UD.Profile as nVarchar(100))AS Profile,    
  UD.FaceBook,    
  UD.Twitter,    
  UD.Pinterest,    
  UD.YouTube,    
  UD.Wikipedia,    
  UD.Blog + ''+ UD.BlogType as Blogger,    
  UD.Website,    
  UD.ImgComments,  
  BR.CreatedDate,            
  BC.CategoryID,            
  C.Name AS BookCategory            
            
  FROM dbo.BooksReview BR            
            
  JOIN dbo.BooksDetails BD            
    ON BR.BookDetailsID = BD.BookDetailsID            
            
  JOIN dbo.Books B            
    ON BD.BookID = B.BookID            
            
  JOIN dbo.Users U            
    ON U.UserID = BR.UserID            
            
  JOIN dbo.BookCategory BC            
    ON BC.BookID = BD.BookID            
            
  JOIN dbo.Category C            
    ON C.CategoryID = BC.CategoryID     
      
  Join dbo.BookAuthor A     
  on A.BookID   = B.BookID    
    
  Join dbo.Users   W     
  on A.AuthorID  = W.UserID     
      
  Join dbo.UserDetails   UD    
  on W.UserID = UD.UserID    
  WHERE BR.BooksReviewID = @booksReviewID            
  AND BR.RecStatus = 'A'            
            
    
END        