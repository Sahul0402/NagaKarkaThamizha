@model PagedList.IPagedList<KarkaThamizha.Object.Models.BooksModels>
@using PagedList.Mvc;

@{
    ViewBag.Title = "Books Category";
}

<!-- Main content -->
<section class="content">
    <div class="row">
        <!-- left column -->
        <div class="col-md-12">
            <!-- general form elements -->
            <div class="box box-primary">

                <div class="box-header with-border">
                    <h3 class="box-title">Books with Category</h3>
                    <span style="float:right">
                        @Html.ActionLink("Add New User", "AddUser") |
                        @Html.ActionLink("Add New Book", "AddBooks", "Books") |
                        @Html.ActionLink("Book List", "Books", "Books") |
                    </span>
                    <span>@ViewBag.Message</span>
                </div>
                <br />

                @using (Html.BeginForm("BooksCateogory", "Books", FormMethod.Get))
                {
                    <div style="float:left;">
                        @Html.Label("Name")
                        @Html.TextBox("txtSearch", ViewBag.CurrentFilter as string, new { style = "width:700px;min-width=700px;", onblur = "TranslateText();" })
                        <input type="submit" value="Search" id="btnSearch" />
                    </div>

                    <!-- /.box-header -->
                    <!-- form start -->
                    <div class="box-body">
                        <table id="pattern-style-b" summary="Meeting Results">
                            <thead>
                                <tr>
                                    <th scope="col">@Html.ActionLink("Name", "BookName", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })</th>
                                    <th scope="col">@Html.ActionLink("Author", "Author", new { sortOrder = ViewBag.EngNameSort, currentFilter = ViewBag.CurrentFilter })</th>
                                    <th scope="col">Category</th>
                                </tr>
                            </thead>
                            @if (Model != null && Model.Count == 0)
                            { return; }

                            @foreach (var item in Model)
                            {
                                <tbody>
                                    <tr>
                                        <td>@Html.DisplayFor(modelItem => item.Book)</td>
                                        <td>@Html.DisplayFor(modelItem => item.Users.User)</td>
                                        <td>@Html.DisplayFor(modelItem => item.Category.Category)</td>
                                    </tr>
                                </tbody>
                            }
                        </table>
                        <div style="padding:0 5px;">
                            Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
                            @Html.PagedListPager(Model, page => Url.Action("BooksCategory", new { page, type = Request.QueryString["type"], sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
                        </div>
                    </div>
                    <!-- /.box-body -->
                }
            </div>
            <!-- /.box -->
        </div>
    </div>
    <!-- /.row -->
</section>
<!-- /.content -->

@{
    @section Scripts{
        <script src="~/JavaScript/Books.js"></script>
    }
}