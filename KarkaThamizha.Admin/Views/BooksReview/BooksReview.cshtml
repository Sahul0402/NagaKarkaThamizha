@model PagedList.IPagedList<KarkaThamizha.Object.Models.BooksReviewModels>
@using PagedList.Mvc;
@using KarkaThamizha.Common.Utility;
@{
    ViewBag.Title = "BooksReview";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link href="~/Content/Site.css" rel="stylesheet" />
<!-- Main content -->
<section class="content">
    <div class="row">
        <!-- left column -->
        <div class="col-md-12">
            <!-- general form elements -->
            <div class="box box-primary">
                <div class="box-header with-border">
                    <h3 class="box-title">Book Review</h3>
                    <h3 class="box-title">
                        @Html.DropDownList("ddListChange", new[]{
                                            new SelectListItem { Text = "Unmatched with Books", Value = "0" },
                                            new SelectListItem { Text="Matched with Books",Value="1" }
                                        }, new { onchange = "ddListChange(Value)" })
                    </h3>

                    @Html.DropDownList("ddlBookReviewBy", (IEnumerable<SelectListItem>)ViewBag.Source,
                                             new { onchange = "document.location.href = '/BooksReview/BooksReview?value=' + this.options[this.selectedIndex].value;" })

                    @*<h4 style="float:right;line-height: 1;">@Html.ActionLink("Add New Book Details", "AddBooksDetails")</h4>*@
                </div>
                <!-- /.box-header -->
                <!-- form start -->
                @using (Html.BeginForm("BooksReivew", "BooksReivew", FormMethod.Post))
                {
                    <div class="box-body">
                        <table id="pattern-style-b">
                            <thead>
                                <tr>
                                    <th scope="col">@Html.ActionLink("Book Name", "BookName", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })</th>
                                    <th scope="col">Header</th>
                                    <th scope="col">Category</th>
                                    <th scope="col">Source</th>
                                    <th scope="col">SourceDate</th>
                                    <th scope="col">Status</th>
                                </tr>
                            </thead>
                            @foreach (var item in Model)
                            {
                                if (item != null)
                                {
                                    <tbody>
                                        <tr>
                                            <td>@Html.DisplayFor(modelItem => item.BookName)</td>
                                            <td>@Html.DisplayFor(modelItem => item.Header).ToString().Chop(200)</td>
                                            <td>@Html.DisplayFor(modelItem => item.Category.Category)</td>
                                            <td>@Html.DisplayFor(modelItem => item.UserName)</td>
                                            <td>@Html.DisplayFor(modelItem => item.SourceDate)</td>
                                            <td style="width:120px;">
                                                @Html.ActionLink("Edit", "UpdateBookReview", new { bookReviewid = item.BooksReviewID }) |
                                                @Html.ActionLink("Delete", "DeleteBookReview", new { bookReviewid = item.BooksReviewID }, new { onclick = "return confirm('Are sure wants to delete?');" })
                                            </td>
                                        </tr>
                                    </tbody>
                                }
                            }
                        </table>
                        <div style="padding:0 5px;">
                            Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
                            @Html.PagedListPager(Model, page => Url.Action("BooksReview", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
                        </div>
                        <br />
                    </div>
                }
                <!-- /.box-body -->
            </div>
            <!-- /.box -->
        </div>
        <!--/.col (left) -->
    </div>
    <!-- /.row -->
</section>
<!-- /.content -->
